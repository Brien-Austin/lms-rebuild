// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  imageUrl String?
  isAdmin Boolean @default(false)
  courseId String? @db.ObjectId
  purchasedCourses String[]
  courses Courses? @relation(fields: [courseId],references: [id])
}

model CourseAccess  {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  courseId String 
  isRequesting Boolean @default(true)
  isGivenAccess Boolean @default(false)
  requests RequestAcess[]
  

}

model RequestAcess{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    emailAddress String
    userId String @unique
    firstName String
    courseAccessId String? @db.ObjectId
    courseAccess CourseAccess? @relation(fields: [courseAccessId],references: [id])
  


}

model Courses {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  imageUrl String?
  price Int?
  isPublished Boolean @default(false)
  isFree Boolean? @default(false)
  description String?
  chapterId String? @db.ObjectId

  users Users[]
  chapter Chapters[]



}


model Chapters {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  index Int?
  isPublished Boolean @default(false)
  imageUrl String?
  title String
  
  youtubeUrl String?
  description String?
  courseId String @db.ObjectId
  chapter Courses @relation(fields: [courseId],references: [id])
  userProgress UserProgress[]
 
}

model UserProgress {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    userId String
    courseId String
    isCompleted Boolean @default(false)
    chapterId String @db.ObjectId
    chapter Chapters @relation(fields: [chapterId],references: [id])
    createdAt  DateTime

}

model CoursePurchase {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String 
  courseId String
  userProgress Int
}